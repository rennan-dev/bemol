<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ComexAPI</name>
    </assembly>
    <members>
        <member name="M:ComexAPI.Controllers.AdminController.CadastraUsuario(WebApi.Data.Dtos.CreateAdminDto)">
            <summary>
            Adiciona um administrador ao banco de dados do WebAPI
            </summary>
            <param name="adminDto">Objetos com os campos necessários para a criação de um admin</param>
            <returns>
            Task
            </returns>
            <response code="200">Caso inserção seja feita com sucesso</response>
        </member>
        <member name="M:ComexAPI.Controllers.AdminController.Login(WebApi.Data.Dtos.LoginAdminDto)">
            <summary>
            Faz login no sistema como admin
            </summary>
            <param name="adminDto">Objetos com os campos necessários para a realização do login</param>
            <returns>
            Task
            </returns>
            <response code="200">Caso login seja feito com sucesso</response>
        </member>
        <member name="M:ComexAPI.Controllers.AdminController.Logout">
            <summary>
            Faz login com um administrador no WebAPI
            </summary>
            <returns>
            Task
            </returns>
            <response code="200">Caso o admin se deslogue com sucesso</response>
        </member>
        <member name="M:ComexAPI.Controllers.CategoriaController.PostCategoria(ComexAPI.Data.Dtos.CreateCategoriaDto)">
            <summary>
            Adiciona uma categoria ao banco de dados do ComexAPI
            </summary>
            <param name="CategoriaDto">Objetos com os campos necessários para a criação de uma categoria</param>
            <returns>IActionResult</returns>
            <response code="201">Caso inserção seja feita com sucesso</response>
        </member>
        <member name="M:ComexAPI.Controllers.CategoriaController.GetCategoriaPorId(System.Int32)">
            <summary>
            Retorna os detalhes de uma categoria específica armazenada no banco de dados do ComexAPI.
            </summary>
            <param name="id">ID da categoria a ser retornado.</param>
            <returns>IActionResult</returns>
            <response code="200">Caso a busca seja feita com sucesso</response>
            <response code="404">Retornado quando a categoria não é encontrada.</response>
        </member>
        <member name="M:ComexAPI.Controllers.CategoriaController.GetCategoria">
            <summary>
            Retorna todas as categorias armazenadas no banco de dados do ComexAPI.
            </summary>
            <returns>IEnumerable&lt;ReadCategoriaDto&gt;</returns>
            <response code="200">Caso a busca seja feita com sucesso</response>
        </member>
        <member name="M:ComexAPI.Controllers.CategoriaController.PutCategoria(System.Int32,ComexAPI.Data.Dtos.ReadCategoriaDto)">
            <summary>
            Atualiza completamente uma categoria existente no banco de dados do ComexAPI.
            </summary>
            <param name="id">ID da categoria a ser atualizado.</param>
            <param name="categoriaDto">Objeto com os campos necessários para a atualização de uma categoria.</param>
            <returns>IActionResult</returns>
            <response code="204">Caso a atualização seja feita com sucesso</response>
            <response code="404">Retornado quando a categoria não é encontrada.</response>
        </member>
        <member name="M:ComexAPI.Controllers.CategoriaController.DeleteCategoria(System.Int32)">
            <summary>
            Deleta uma categoria do banco de dados do ComexAPI
            </summary>
            <param name="id">ID da categoria a ser removido.</param>
            <returns>IActionResult</returns>
            <response code="204">Caso a deletação seja feita com sucesso</response>
            <response code="404">Retornado quando a categoria não é encontrada.</response>
        </member>
        <member name="M:ComexAPI.Controllers.ClienteController.PostCliente(ComexAPI.Data.Dtos.CreateClienteDto)">
            <summary>
            Adiciona um cliente ao banco de dados do ComexAPI
            </summary>
            <param name="ClienteDto">Objetos com os campos necessários para a criação de um cliente</param>
            <returns>IActionResult</returns>
            <response code="201">Caso inserção seja feita com sucesso</response>
        </member>
        <member name="M:ComexAPI.Controllers.ClienteController.GetClientePorId(System.Int32)">
            <summary>
            Retorna os detalhes de um cliente específico armazenado no banco de dados do ComexAPI.
            </summary>
            <param name="id">ID do cliente a ser retornado.</param>
            <returns>IActionResult</returns>
            <response code="200">Caso a busca seja feita com sucesso</response>
            <response code="404">Retornado quando o cliente não é encontrado.</response>
        </member>
        <member name="M:ComexAPI.Controllers.ClienteController.GetClientes">
            <summary>
            Retorna todos os clientes armazenados no banco de dados do ComexAPI.
            </summary>
            <returns>IEnumerable&lt;ReadClienteDto&gt;</returns>
            <response code="200">Caso a busca seja feita com sucesso</response>
        </member>
        <member name="M:ComexAPI.Controllers.ClienteController.PutCliente(System.Int32,ComexAPI.Data.Dtos.UpdateClienteDto)">
            <summary>
            Atualiza completamente um cliente existente no banco de dados do ComexAPI.
            </summary>
            <param name="id">ID do cliente a ser atualizado.</param>
            <param name="clienteDto">Objeto com os campos necessários para a atualização de um cliente.</param>
            <returns>IActionResult</returns>
            <response code="204">Caso a atualização seja feita com sucesso</response>
            <response code="404">Retornado quando o cliente não é encontrado.</response>
        </member>
        <member name="M:ComexAPI.Controllers.ClienteController.DeleteCliente(System.Int32)">
            <summary>
            Deleta um cliente do banco de dados do ComexAPI
            </summary>
            <param name="id">ID do cliente a ser removido.</param>
            <returns>IActionResult</returns>
            <response code="204">Caso a deletação seja feita com sucesso</response>
            <response code="404">Retornado quando o cliente não é encontrado.</response>
        </member>
        <member name="M:ComexAPI.Controllers.EnderecoController.PostProduto(ComexAPI.Data.Dtos.CreateEnderecoDto)">
            <summary>
            Adiciona um endereço ao banco de dados do ComexAPI
            </summary>
            <param name="EnderecoDto">Objetos com os campos necessários para a criação de um endereço</param>
            <returns>IActionResult</returns>
            <response code="201">Caso inserção seja feita com sucesso</response>
        </member>
        <member name="M:ComexAPI.Controllers.EnderecoController.GetEnderecoPorId(System.Int32)">
            <summary>
            Retorna os detalhes de um endereço específico armazenado no banco de dados do ComexAPI.
            </summary>
            <param name="id">ID do endereço a ser retornado.</param>
            <returns>IActionResult</returns>
            <response code="200">Caso a busca seja feita com sucesso</response>
            <response code="404">Retornado quando o endereço não é encontrado.</response>
        </member>
        <member name="M:ComexAPI.Controllers.EnderecoController.GetEnderecos">
            <summary>
            Retorna todos os endereços armazenados no banco de dados do ComexAPI.
            </summary>
            <returns>IEnumerable&lt;ReadEnderecoDto&gt;</returns>
            <response code="200">Caso a busca seja feita com sucesso</response>
        </member>
        <member name="M:ComexAPI.Controllers.EnderecoController.PutEndereco(System.Int32,ComexAPI.Data.Dtos.UpdateEnderecoDto)">
            <summary>
            Atualiza completamente um endereço existente no banco de dados do ComexAPI.
            </summary>
            <param name="id">ID do endereço a ser atualizado.</param>
            <param name="enderecoDto">Objeto com os campos necessários para a atualização de um endereço.</param>
            <returns>IActionResult</returns>
            <response code="204">Caso a atualização seja feita com sucesso</response>
            <response code="404">Retornado quando o endereço não é encontrado.</response>
        </member>
        <member name="M:ComexAPI.Controllers.EnderecoController.DeleteEndereco(System.Int32)">
            <summary>
            Deleta um endereço do banco de dados do ComexAPI
            </summary>
            <param name="id">ID do endereço a ser removido.</param>
            <returns>IActionResult</returns>
            <response code="204">Caso a deletação seja feita com sucesso</response>
            <response code="404">Retornado quando o endereço não é encontrado.</response>
        </member>
        <member name="M:ComexAPI.Controllers.ProdutoController.PostProduto(ComexAPI.Data.Dtos.CreateProdutoDto)">
            <summary>
            Adiciona um produto ao banco de dados do ComexAPI
            </summary>
            <param name="produtoDto">Objetos com os campos necessários para a criação de um produto</param>
            <returns>IActionResult</returns>
            <response code="201">Caso inserção seja feita com sucesso</response>
        </member>
        <member name="M:ComexAPI.Controllers.ProdutoController.GetProdutos">
            <summary>
            Retorna todos os produtos armazenados no banco de dados do ComexAPI.
            </summary>
            <returns>IEnumerable&lt;ReadProdutoDto&gt;</returns>
            <response code="200">Caso a busca seja feita com sucesso</response>
        </member>
        <member name="M:ComexAPI.Controllers.ProdutoController.RecuperaProdutoPorId(System.Int32)">
            <summary>
            Retorna os detalhes de um produto específico armazenado no banco de dados do ComexAPI.
            </summary>
            <param name="id">ID do produto a ser retornado.</param>
            <returns>IActionResult</returns>
            <response code="200">Caso a busca seja feita com sucesso</response>
            <response code="404">Retornado quando o produto não é encontrado.</response>
        </member>
        <member name="M:ComexAPI.Controllers.ProdutoController.PutProduto(System.Int32,ComexAPI.Data.Dtos.UpdateProdutoDto)">
            <summary>
            Atualiza completamente um produto existente no banco de dados do ComexAPI.
            </summary>
            <param name="id">ID do produto a ser atualizado.</param>
            <param name="produtoDto">Objeto com os campos necessários para a atualização de um produto.</param>
            <returns>IActionResult</returns>
            <response code="204">Caso a atualização seja feita com sucesso</response>
            <response code="404">Retornado quando o produto não é encontrado.</response>
        </member>
        <member name="M:ComexAPI.Controllers.ProdutoController.PatchProduto(System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{ComexAPI.Data.Dtos.UpdateProdutoDto})">
            <summary>
            Atualiza um produto parcialmente no banco de dados do ComexAPI
            </summary>
            <param name="id">ID do produto a ser atualizado.</param>
            <param name="patch">Documento JSON contendo as operações de patch a serem aplicadas.</param>
            <returns>IActionResult</returns>
            <response code="204">Caso a atualização seja feita com sucesso</response>
            <response code="404">Retornado quando o produto não é encontrado.</response>
        </member>
        <member name="M:ComexAPI.Controllers.ProdutoController.DeleteProduto(System.Int32)">
            <summary>
            Deleta um produto do banco de dados do ComexAPI
            </summary>
            <param name="id">ID do produto a ser removido.</param>
            <returns>IActionResult</returns>
            <response code="204">Caso a deletação seja feita com sucesso</response>
            <response code="404">Retornado quando o produto não é encontrado.</response>
        </member>
        <member name="T:ComexAPI.Migrations.CriandoTabelaDeProduto">
            <inheritdoc />
        </member>
        <member name="M:ComexAPI.Migrations.CriandoTabelaDeProduto.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ComexAPI.Migrations.CriandoTabelaDeProduto.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ComexAPI.Migrations.CriandoTabelaDeProduto.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:ComexAPI.Migrations.ClienteEnderecoeProduto">
            <inheritdoc />
        </member>
        <member name="M:ComexAPI.Migrations.ClienteEnderecoeProduto.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ComexAPI.Migrations.ClienteEnderecoeProduto.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ComexAPI.Migrations.ClienteEnderecoeProduto.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:ComexAPI.Migrations.ClienteeEndereco">
            <inheritdoc />
        </member>
        <member name="M:ComexAPI.Migrations.ClienteeEndereco.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ComexAPI.Migrations.ClienteeEndereco.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ComexAPI.Migrations.ClienteeEndereco.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:ComexAPI.Migrations.CategoriaeProduto">
            <inheritdoc />
        </member>
        <member name="M:ComexAPI.Migrations.CategoriaeProduto.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ComexAPI.Migrations.CategoriaeProduto.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ComexAPI.Migrations.CategoriaeProduto.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:ComexAPI.Migrations.AddAdminsdatabase">
            <inheritdoc />
        </member>
        <member name="M:ComexAPI.Migrations.AddAdminsdatabase.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ComexAPI.Migrations.AddAdminsdatabase.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:ComexAPI.Migrations.AddAdminsdatabase.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
    </members>
</doc>
